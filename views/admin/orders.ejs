<%- include("../../views/partials/admin/header") %>

<main class="flex-1 overflow-auto p-8">
  <!-- Page Header -->
  <div class="mb-8">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
      <div>
        <h1 class="text-3xl font-bold text-gray-900 mb-2">Order Management</h1>
        <p class="text-gray-600">Track and manage all customer orders efficiently</p>
      </div>
      
      <!-- Action Buttons -->
      <div class="flex items-center space-x-4">
        <button class="bg-white border border-gray-300 text-gray-700 px-6 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2">
          <i class="fas fa-download"></i>
          <span>Export Orders</span>
        </button>
        <button onclick="toggleSidebar()" class="bg-gradient-to-r from-primary to-primary-hover text-white px-6 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2">
          <i class="fas fa-bars"></i>
          <span>Toggle Sidebar</span>
        </button>
      </div>
    </div>
  </div>

  <!-- Statistics Cards -->
  <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-6 mb-8">
    <!-- Processing Orders -->
    <div class="bg-white rounded-2xl p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-sm font-medium text-gray-600">Processing</p>
          <p class="text-2xl font-bold text-blue-600"><%= orderStats?.processing || 0 %></p>
        </div>
        <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center">
          <i class="fas fa-cog text-white"></i>
        </div>
      </div>
    </div>

    <!-- Delivered Orders -->
    <div class="bg-white rounded-2xl p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-sm font-medium text-gray-600">Delivered</p>
          <p class="text-2xl font-bold text-green-600"><%= orderStats?.delivered || 0 %></p>
        </div>
        <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center">
          <i class="fas fa-check-circle text-white"></i>
        </div>
      </div>
    </div>

    <!-- Returns -->
    <div class="bg-white rounded-2xl p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-sm font-medium text-gray-600">Returns</p>
          <p class="text-2xl font-bold text-orange-600"><%= orderStats?.returned || 0 %></p>
        </div>
        <div class="w-12 h-12 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center">
          <i class="fas fa-undo text-white"></i>
        </div>
      </div>
    </div>

    <!-- Pending Verification -->
    <div class="bg-white rounded-2xl p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-sm font-medium text-gray-600">Verification</p>
          <p class="text-2xl font-bold text-red-600"><%= orderStats?.requested || 0 %></p>
        </div>
        <div class="w-12 h-12 bg-gradient-to-br from-red-500 to-red-600 rounded-xl flex items-center justify-center">
          <i class="fas fa-exclamation-triangle text-white"></i>
        </div>
      </div>
    </div>

    <!-- Cancelled Orders -->
    <div class="bg-white rounded-2xl p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-sm font-medium text-gray-600">Cancelled</p>
          <p class="text-2xl font-bold text-gray-600"><%= orderStats?.cancelled || 0 %></p>
        </div>
        <div class="w-12 h-12 bg-gradient-to-br from-gray-500 to-gray-600 rounded-xl flex items-center justify-center">
          <i class="fas fa-times-circle text-white"></i>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters Section -->
  <div class="bg-white rounded-2xl card-shadow border border-gray-100 p-6 mb-8">
    <h3 class="text-lg font-semibold text-gray-900 mb-6 flex items-center">
      <i class="fas fa-filter text-primary mr-3"></i>
      Filter Orders
    </h3>
    
    <form method="GET" action="/admin/orders" class="space-y-6">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Search -->
        <div class="lg:col-span-2 space-y-2">
          <label class="block text-sm font-semibold text-gray-700">
            <i class="fas fa-search text-primary mr-2"></i>Search Orders
          </label>
          <div class="relative">
            <input 
              type="text" 
              name="search"
              placeholder="Search by Order ID, Customer name, or Email..."
              value="<%= typeof search !== 'undefined' ? search : '' %>"
              class="w-full pl-12 pr-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all duration-300 bg-gray-50 hover:bg-white"
            />
            <i class="fas fa-search absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
          </div>
        </div>

        <!-- Status Filter -->
        <div class="space-y-2">
          <label class="block text-sm font-semibold text-gray-700">
            <i class="fas fa-list text-primary mr-2"></i>Order Status
          </label>
          <select 
            name="status"
            class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all duration-300 bg-gray-50 hover:bg-white"
          >
            <option value="">All Statuses</option>
            <option value="Processing" <%= (typeof status !== 'undefined' && status === 'Processing') ? 'selected' : '' %>>Processing</option>
            <option value="Pending" <%= (typeof status !== 'undefined' && status === 'Pending') ? 'selected' : '' %>>Pending</option>
            <option value="Shipped" <%= (typeof status !== 'undefined' && status === 'Shipped') ? 'selected' : '' %>>Shipped</option>
            <option value="Delivered" <%= (typeof status !== 'undefined' && status === 'Delivered') ? 'selected' : '' %>>Delivered</option>
            <option value="Cancelled" <%= (typeof status !== 'undefined' && status === 'Cancelled') ? 'selected' : '' %>>Cancelled</option>
            <option value="Return Request" <%= (typeof status !== 'undefined' && status === 'Return Request') ? 'selected' : '' %>>Return Request</option>
            <option value="Returned" <%= (typeof status !== 'undefined' && status === 'Returned') ? 'selected' : '' %>>Returned</option>
          </select>
        </div>

        <!-- Payment Status Filter -->
        <div class="space-y-2">
          <label class="block text-sm font-semibold text-gray-700">
            <i class="fas fa-credit-card text-primary mr-2"></i>Payment Status
          </label>
          <select 
            name="paymentStatus"
            class="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all duration-300 bg-gray-50 hover:bg-white"
          >
            <option value="">All Payments</option>
            <option value="Pending" <%= (typeof paymentStatus !== 'undefined' && paymentStatus === 'Pending') ? 'selected' : '' %>>Pending</option>
            <option value="Paid" <%= (typeof paymentStatus !== 'undefined' && paymentStatus === 'Paid') ? 'selected' : '' %>>Paid</option>
            <option value="Failed" <%= (typeof paymentStatus !== 'undefined' && paymentStatus === 'Failed') ? 'selected' : '' %>>Failed</option>
            <option value="Refunded" <%= (typeof paymentStatus !== 'undefined' && paymentStatus === 'Refunded') ? 'selected' : '' %>>Refunded</option>
          </select>
        </div>
      </div>

      <div class="flex items-center justify-between pt-6 border-t border-gray-200">
        <div class="flex items-center space-x-4">
          <button 
            type="submit"
            class="bg-gradient-to-r from-primary to-primary-hover text-white px-8 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2"
          >
            <i class="fas fa-filter"></i>
            <span>Apply Filters</span>
          </button>
          <a 
            href="/admin/orders"
            class="bg-gray-100 text-gray-700 px-8 py-3 rounded-xl font-medium transition-all duration-300 hover:bg-gray-200 flex items-center space-x-2"
          >
            <i class="fas fa-times"></i>
            <span>Clear Filters</span>
          </a>
        </div>
      </div>
    </form>
  </div>

  <!-- Orders Table -->
  <div class="bg-white rounded-2xl card-shadow border border-gray-100 overflow-hidden lg:overflow-visible">
    <div class="px-6 py-4 border-b border-gray-100 bg-gray-50/50">
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
          <i class="fas fa-shopping-cart text-primary mr-3"></i>
          Orders (<%= orders.length %>)
        </h3>
      </div>
    </div>
    
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Order Info</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Customer</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Items</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Amount</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Status</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% orders.forEach((order, index) => { %>
            <% 
              // Calculate return status
              const totalItems = order.orderedItems ? order.orderedItems.length : 0;
              const returnRequestItems = order.orderedItems ? order.orderedItems.filter(item => item.status === 'Return Request') : [];
              const returnedItems = order.orderedItems ? order.orderedItems.filter(item => item.status === 'Returned') : [];
              const unverifiedReturnItems = returnRequestItems.filter(item => !item.returnVerified);
              
              // Check if entire order is returned and needs verification
              const isEntireOrderReturned = totalItems > 0 && (returnRequestItems.length + returnedItems.length) === totalItems;
              const hasUnverifiedFullReturn = isEntireOrderReturned && unverifiedReturnItems.length > 0;
              
              // Check for partial returns
              const hasPartialReturns = returnRequestItems.length > 0 && !isEntireOrderReturned;
              const hasPartialUnverifiedReturns = hasPartialReturns && unverifiedReturnItems.length > 0;
              
              // Determine row styling
              let rowClass = 'hover:bg-gray-50';
              if (hasUnverifiedFullReturn) {
                rowClass = 'bg-red-50 hover:bg-red-100 border-l-4 border-red-500';
              } else if (hasPartialUnverifiedReturns) {
                rowClass = 'bg-orange-50 hover:bg-orange-100 border-l-4 border-orange-400';
              } else if (hasPartialReturns) {
                rowClass = 'bg-yellow-50 hover:bg-yellow-100 border-l-4 border-yellow-400';
              } else if (isEntireOrderReturned) {
                rowClass = 'bg-gray-50 hover:bg-gray-100 border-l-4 border-gray-400';
              }
            %>
            <tr class="transition-colors cursor-pointer <%= rowClass %>"
                onclick="window.location.href='#'"
                style="animation-delay: <%= index * 0.1 %>s;">
              
              <!-- Order Info -->
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="space-y-2">
                  <div class="flex items-center space-x-3">
                    <div class="text-sm font-semibold text-primary">
                      #<%= order.orderId?.toString().slice(-8).toUpperCase() || order._id.toString().slice(-8).toUpperCase() %>
                    </div>
                    <% if (hasUnverifiedFullReturn) { %>
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 border border-red-200">
                        <i class="fas fa-exclamation-triangle mr-1"></i>
                        Full Return - Verify
                      </span>
                    <% } else if (hasPartialUnverifiedReturns) { %>
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800 border border-orange-200">
                        <i class="fas fa-exclamation-circle mr-1"></i>
                        Partial Return
                      </span>
                    <% } else if (hasPartialReturns) { %>
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 border border-yellow-200">
                        <i class="fas fa-undo mr-1"></i>
                        Items Returned
                      </span>
                    <% } else if (isEntireOrderReturned) { %>
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 border border-gray-200">
                        <i class="fas fa-check-circle mr-1"></i>
                        Fully Returned
                      </span>
                    <% } %>
                  </div>
                  <div class="text-xs text-gray-500 flex items-center">
                    <i class="fas fa-calendar mr-1"></i>
                    <%= new Date(order.createdOn).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' }) %>
                  </div>
                  <% if (order.couponApplied && order.couponCode) { %>
                    <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                      <i class="fas fa-tag mr-1"></i>
                      <%= order.couponCode %>
                    </span>
                  <% } %>
                </div>
              </td>

              <!-- Customer -->
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-gradient-to-br from-primary to-primary-hover rounded-full flex items-center justify-center text-white font-semibold text-sm">
                    <%= (order.userId?.name || 'U').charAt(0).toUpperCase() %>
                  </div>
                  <div>
                    <div class="text-sm font-semibold text-gray-900"><%= order.userId?.name || 'N/A' %></div>
                    <div class="text-xs text-gray-500"><%= order.userId?.email || 'N/A' %></div>
                  </div>
                </div>
              </td>

              <!-- Items -->
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="space-y-1">
                  <div class="text-sm font-semibold text-gray-900">
                    <%= totalItems %> item<%= totalItems !== 1 ? 's' : '' %>
                  </div>
                  <% if (order.orderedItems && order.orderedItems.length > 0) { %>
                    <div class="text-xs text-gray-500">
                      <%= order.orderedItems[0].product?.productName || 'Product' %>
                      <% if (order.orderedItems.length > 1) { %>
                        + <%= order.orderedItems.length - 1 %> more
                      <% } %>
                    </div>
                  <% } %>
                  <% if (hasUnverifiedFullReturn) { %>
                    <div class="text-xs text-red-600 font-medium flex items-center">
                      <i class="fas fa-exclamation-triangle mr-1"></i>
                      Full order needs verification
                    </div>
                  <% } else if (hasPartialUnverifiedReturns) { %>
                    <div class="text-xs text-orange-600 font-medium flex items-center">
                      <i class="fas fa-exclamation-circle mr-1"></i>
                      <%= unverifiedReturnItems.length %> item<%= unverifiedReturnItems.length !== 1 ? 's' : '' %> need attention
                    </div>
                  <% } else if (hasPartialReturns) { %>
                    <div class="text-xs text-yellow-600 font-medium flex items-center">
                      <i class="fas fa-undo mr-1"></i>
                      <%= returnRequestItems.length %> item<%= returnRequestItems.length !== 1 ? 's' : '' %> returned
                    </div>
                  <% } %>
                </div>
              </td>

              <!-- Amount -->
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="space-y-1">
                  <div class="text-lg font-bold text-gray-900">₹<%= order.finalAmount?.toLocaleString('en-IN') || '0' %></div>
                  <% if (order.discount > 0) { %>
                    <div class="text-xs text-green-600 flex items-center">
                      <i class="fas fa-arrow-down mr-1"></i>
                      ₹<%= order.discount.toLocaleString('en-IN') %> saved
                    </div>
                  <% } %>
                  <% if (order.shippingPrice === 0) { %>
                    <div class="text-xs text-blue-600">Free Shipping</div>
                  <% } %>
                </div>
              </td>

              <!-- Status -->
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="space-y-1">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium
                    <%= order.status === 'Processing' ? 'bg-blue-100 text-blue-800' :
                        order.status === 'Pending' ? 'bg-yellow-100 text-yellow-800' :
                        order.status === 'Shipped' ? 'bg-purple-100 text-purple-800' :
                        order.status === 'Delivered' ? 'bg-green-100 text-green-800' :
                        order.status === 'Cancelled' ? 'bg-red-100 text-red-800' :
                        order.status === 'Return Request' ? 'bg-orange-100 text-orange-800' :
                        order.status === 'Returned' ? 'bg-gray-100 text-gray-800' :
                        'bg-gray-100 text-gray-800' %>">
                    <div class="w-2 h-2 rounded-full mr-2
                      <%= order.status === 'Processing' ? 'bg-blue-500' :
                          order.status === 'Pending' ? 'bg-yellow-500' :
                          order.status === 'Shipped' ? 'bg-purple-500' :
                          order.status === 'Delivered' ? 'bg-green-500' :
                          order.status === 'Cancelled' ? 'bg-red-500' :
                          order.status === 'Return Request' ? 'bg-orange-500' :
                          order.status === 'Returned' ? 'bg-gray-500' :
                          'bg-gray-500' %>"></div>
                    <%= order.status || 'Unknown' %>
                  </span>
                  <% if (hasUnverifiedFullReturn) { %>
                    <div class="text-xs text-red-600 font-medium">Full return verification required</div>
                  <% } else if (hasPartialUnverifiedReturns) { %>
                    <div class="text-xs text-orange-600 font-medium">Some items need verification</div>
                  <% } else if (hasPartialReturns) { %>
                    <div class="text-xs text-yellow-600 font-medium">Partial returns processed</div>
                  <% } %>
                </div>
              </td>

              <!-- Actions -->
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium" onclick="event.stopPropagation()">
                <div class="flex items-center space-x-2">
                  <a href="/admin/orders/<%= order._id %>" 
                     class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1">
                    <i class="fas fa-eye"></i>
                    <span>View</span>
                  </a>
                  
                  <!-- Show Verify button only for full order returns that need verification -->
                  <% if (hasUnverifiedFullReturn) { %>
                    <button onclick='showReturnVerification("<%= order._id %>", 0, <%- JSON.stringify(order.orderedItems[0]) %>)'
                            class="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1">
                      <i class="fas fa-exclamation-triangle"></i>
                      <span>Verify</span>
                    </button>
                  <% } else if (hasPartialReturns || hasPartialUnverifiedReturns) { %>
                    <a href="/admin/orders/<%= order._id %>"
                       class="bg-gradient-to-r from-orange-500 to-orange-600 hover:from-orange-600 hover:to-orange-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1">
                      <i class="fas fa-undo"></i>
                      <span>Handle</span>
                    </a>
                  <% } else if (order.status !== 'Delivered' && order.status !== 'Cancelled' && order.status !== 'Returned') { %>
                    <div class="relative">
                      <select onchange="updateOrderStatus('<%= order._id %>', this.value)"
                              class="appearance-none bg-white border border-gray-300 rounded-lg px-3 py-2 pr-8 text-xs focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary">
                        <option value="">Quick Update</option>
                        <% if (order.status === 'Processing') { %>
                          <option value="Shipped">→ Shipped</option>
                          <option value="Cancelled">→ Cancel</option>
                        <% } else if (order.status === 'Shipped') { %>
                          <option value="Delivered">→ Delivered</option>
                        <% } %>
                      </select>
                      <i class="fas fa-chevron-down absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-400 pointer-events-none text-xs"></i>
                    </div>
                  <% } %>
                </div>
              </td>
            </tr>
          <% }) %>
          
          <% if (orders.length === 0) { %>
            <tr>
              <td colspan="7" class="px-6 py-16 text-center">
                <div class="flex flex-col items-center">
                  <div class="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mb-4">
                    <i class="fas fa-shopping-cart text-3xl text-gray-400"></i>
                  </div>
                  <h3 class="text-lg font-medium text-gray-900 mb-2">No orders found</h3>
                  <p class="text-gray-500 mb-4">Try adjusting your search or filter criteria</p>
                  <a href="/admin/orders" 
                     class="bg-gradient-to-r from-primary to-primary-hover text-white px-6 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2">
                    <i class="fas fa-refresh"></i>
                    <span>Reset Filters</span>
                  </a>
                </div>
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Enhanced Pagination -->
  <% if (totalPages > 0) { %>
    <div class="mt-8 flex flex-col sm:flex-row items-center justify-between gap-4">
      <div class="text-sm text-gray-600">
        Showing <%= ((currentPage - 1) * 10) + 1 %> to <%= Math.min(currentPage * 10, orders.length) %> of <%= orders.length %> orders
      </div>
      
      <nav class="flex items-center space-x-1">
        <% if (currentPage > 1) { %>
          <a href="?search=<%= search || '' %>&status=<%= status || '' %>&paymentStatus=<%= paymentStatus || '' %>&page=<%= currentPage - 1 %>" 
             class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-50 transition-colors duration-300">
            <i class="fas fa-chevron-left mr-1"></i>Previous
          </a>
        <% } else { %>
          <span class="px-4 py-2 text-sm font-medium text-gray-400 bg-gray-100 border border-gray-300 rounded-l-lg cursor-not-allowed">
            <i class="fas fa-chevron-left mr-1"></i>Previous
          </span>
        <% } %>

        <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
          <a href="?search=<%= search || '' %>&status=<%= status || '' %>&paymentStatus=<%= paymentStatus || '' %>&page=<%= i %>" 
             class="px-4 py-2 text-sm font-medium <%= i === currentPage ? 'text-white bg-gradient-to-r from-primary to-primary-hover border-primary' : 'text-gray-700 bg-white border-gray-300 hover:bg-gray-50' %> border transition-all duration-300">
            <%= i %>
          </a>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <a href="?search=<%= search || '' %>&status=<%= status || '' %>&paymentStatus=<%= paymentStatus || '' %>&page=<%= currentPage + 1 %>" 
             class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-50 transition-colors duration-300">
            Next<i class="fas fa-chevron-right ml-1"></i>
          </a>
        <% } else { %>
          <span class="px-4 py-2 text-sm font-medium text-gray-400 bg-gray-100 border border-gray-300 rounded-r-lg cursor-not-allowed">
            Next<i class="fas fa-chevron-right ml-1"></i>
          </span>
        <% } %>
      </nav>
    </div>
  <% } %>
</main>

<!-- Return Verification Modal -->
<div id="returnVerificationModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50 hidden">
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-2xl bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-6">
        <h3 class="text-xl font-semibold text-gray-900 flex items-center">
          <i class="fas fa-exclamation-triangle text-red-500 mr-3"></i>
          Full Order Return Verification
        </h3>
        <button onclick="closeVerificationModal()" class="text-gray-400 hover:text-gray-600 transition-colors duration-300">
          <i class="fas fa-times text-xl"></i>
        </button>
      </div>
      <div id="verificationContent" class="space-y-4">
        <!-- Content will be populated by JavaScript -->
      </div>
      <div class="flex items-center justify-end space-x-4 mt-8 pt-6 border-t border-gray-200">
        <button onclick="closeVerificationModal()" 
                class="px-6 py-3 bg-gray-100 text-gray-700 rounded-xl font-medium hover:bg-gray-200 transition-colors duration-300">
          Cancel
        </button>
        <button onclick="handleReturnAction('Returned')" 
                class="px-6 py-3 bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2">
          <i class="fas fa-check"></i>
          <span>Accept Full Return</span>
        </button>
        <button onclick="handleReturnAction('Return Rejected')" 
                class="px-6 py-3 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2">
          <i class="fas fa-times"></i>
          <span>Reject Full Return</span>
        </button>
      </div>
    </div>
  </div>
</div>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  let currentVerificationData = null;

  async function updateOrderStatus(orderId, newStatus) {
    if (!newStatus) return;
    
    const statusNames = {
      'Processing': 'Processing',
      'Pending': 'Pending',
      'Shipped': 'Shipped',
      'Delivered': 'Delivered',
      'Cancelled': 'Cancelled',
      'Return Accepted': 'Return Accepted',
      'Return Rejected': 'Return Rejected'
    };

    const confirmResult = await Swal.fire({
      title: `Update Order Status`,
      text: `Are you sure you want to mark this order as ${statusNames[newStatus]}?`,
      icon: 'question',
      showCancelButton: true,
      confirmButtonText: `Yes, Update to ${statusNames[newStatus]}`,
      confirmButtonColor: "#8a2be2",
      cancelButtonText: 'Cancel',
      reverseButtons: true,
      customClass: {
        popup: 'rounded-2xl'
      }
    });

    if (!confirmResult.isConfirmed) {
      event.target.value = '';
      return;
    }

    try {
      const response = await fetch(`/admin/orders/${orderId}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ status: newStatus })
      });

      const result = await response.json();
      
      if (result.success) {
        Swal.fire({
          title: 'Status Updated!',
          text: `Order has been marked as ${statusNames[newStatus]}`,
          icon: 'success',
          timer: 2000,
          showConfirmButton: false,
          customClass: {
            popup: 'rounded-2xl'
          }
        });
        setTimeout(() => location.reload(), 2000);
      } else {
        Swal.fire({
          title: "Error",
          text: result.message || "Failed to update order status",
          icon: "error",
          customClass: {
            popup: 'rounded-2xl'
          }
        });
      }
    } catch (err) {
      console.error("Error:", err);
      Swal.fire({
        title: "Server Error",
        text: "Unable to update order status",
        icon: "error",
        customClass: {
          popup: 'rounded-2xl'
        }
      });
    }
    
    event.target.value = '';
  }

  function showReturnVerification(orderId, itemIndex, returnData) {
    currentVerificationData = { orderId, itemIndex, returnData };
    const modal = document.getElementById('returnVerificationModal');
    const content = document.getElementById('verificationContent');
    
    content.innerHTML = `
      <div class="bg-red-50 border border-red-200 rounded-xl p-6">
        <div class="flex items-start">
          <i class="fas fa-exclamation-triangle text-red-600 mt-1 mr-4 text-lg"></i>
          <div class="flex-1">
            <h4 class="text-lg font-semibold text-red-800 mb-4">Full Order Return Request</h4>
            <div class="space-y-3">
              <div class="bg-white p-4 rounded-lg border border-red-100">
                <p class="text-red-700 font-medium mb-2">⚠️ This is a complete order return request</p>
                <p class="text-red-600 text-sm">All items in this order have been requested for return and require your verification before processing.</p>
              </div>
              <div>
                <span class="font-semibold text-red-700">Return Title:</span>
                <p class="text-red-800 mt-1 bg-white p-3 rounded-lg border border-red-100">${returnData.returnTitle || 'No title provided'}</p>
              </div>
              <div>
                <span class="font-semibold text-red-700">Return Reason:</span>
                <p class="text-red-800 mt-1 bg-white p-3 rounded-lg border border-red-100">${returnData.returnReason || 'No reason provided'}</p>
              </div>
              <div class="text-sm text-red-600 mt-4 flex items-center">
                <i class="fas fa-clock mr-2"></i>
                Requested on: ${new Date(returnData.returnRequestDate || Date.now()).toLocaleDateString('en-IN')}
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="bg-blue-50 border border-blue-200 rounded-xl p-6">
        <div class="flex items-center text-blue-800 mb-3">
          <i class="fas fa-info-circle mr-3 text-lg"></i>
          <span class="font-semibold">Full Order Return Verification</span>
        </div>
        <p class="text-blue-700">
          This entire order has been requested for return. Please carefully review the return details above and decide whether to accept or reject the complete order return.
        </p>
      </div>
    `;
    
    modal.classList.remove('hidden');
  }

  function closeVerificationModal() {
    document.getElementById('returnVerificationModal').classList.add('hidden');
    currentVerificationData = null;
  }

  async function handleReturnAction(actionStatus) {
    if (!currentVerificationData) return;
    
    const { orderId, itemIndex } = currentVerificationData;
    
    try {
      const response = await fetch(`/admin/orders/${orderId}`, {
        method: 'PATCH',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ itemIndex, status: actionStatus })
      });

      const result = await response.json();
      
      if (result.success) {
        closeVerificationModal();
        Swal.fire({
          title: actionStatus === 'Returned' ? 'Full Return Accepted' : 'Full Return Rejected',
          text: `The complete order return has been ${actionStatus === 'Returned' ? 'accepted' : 'rejected'}.`,
          icon: 'success',
          timer: 2000,
          showConfirmButton: false,
          customClass: {
            popup: 'rounded-2xl'
          }
        });
        setTimeout(() => location.reload(), 2000);
      } else {
        Swal.fire({
          title: "Error",
          text: result.message || "Failed to process return",
          icon: "error",
          customClass: {
            popup: 'rounded-2xl'
          }
        });
      }
    } catch (err) {
      console.error("Error:", err);
      Swal.fire({
        title: "Server Error",
        text: "Unable to process return",
        icon: "error",
        customClass: {
          popup: 'rounded-2xl'
        }
      });
    }
  }

  // Close modal when clicking outside
  document.getElementById('returnVerificationModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeVerificationModal();
    }
  });

  // Animate table rows on load
  window.addEventListener('load', function() {
    const rows = document.querySelectorAll('tbody tr');
    rows.forEach((row, index) => {
      setTimeout(() => {
        row.style.opacity = '1';
        row.style.transform = 'translateY(0)';
      }, index * 100);
    });
  });

  // Toggle sidebar function
  function toggleSidebar() {
    const sidebar = document.querySelector('.sidebar');
    const mainContent = document.querySelector('main');
    
    if (sidebar) {
      sidebar.classList.toggle('collapsed');
      mainContent.classList.toggle('sidebar-collapsed');
      
      // Store sidebar state in localStorage
      const isCollapsed = sidebar.classList.contains('collapsed');
      localStorage.setItem('sidebarCollapsed', isCollapsed);
    }
  }

  // Load sidebar state on page load
  window.addEventListener('load', function() {
    const sidebarCollapsed = localStorage.getItem('sidebarCollapsed') === 'true';
    const sidebar = document.querySelector('.sidebar');
    const mainContent = document.querySelector('main');
    
    if (sidebarCollapsed && sidebar) {
      sidebar.classList.add('collapsed');
      mainContent.classList.add('sidebar-collapsed');
    }
  });
</script>

</body>
</html>
