<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Wallet - ShadElectro</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/css/user-profile.css">
  <style>
    .wallet-gradient {
      background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%);
    }
    .animate-fade-in-up {
      animation: fadeInUp 0.6s ease-out forwards;
    }
    .animate-slide-in-right {
      animation: slideInRight 0.8s ease-out forwards;
    }
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(30px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(30px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
    .transaction-item:hover {
      background-color: #f9fafb;
    }
    .status-completed {
      background-color: #dcfce7;
      color: #166534;
    }
    .status-pending {
      background-color: #fef3c7;
      color: #92400e;
    }
    .status-failed {
      background-color: #fee2e2;
      color: #991b1b;
    }
    .animate-visible {
      opacity: 1;
      transform: translateY(0);
    }
  </style>
</head>
<body class="bg-gray-50">
  <!-- Header Include -->
  <%- include("../partials/user/header") %>
  
  <div class="profile-container">
    <!-- Breadcrumb -->
    <div class="breadcrumb animate-fade-in-up bg-white border-b">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center space-x-2 py-4 text-sm text-gray-600">
          <a href="/" class="breadcrumb-link flex items-center space-x-1 hover:text-gray-900">
            <i class="fas fa-home"></i>
            <span>Home</span>
          </a>
          <span class="breadcrumb-separator">
            <i class="fas fa-chevron-right"></i>
          </span>
          <span class="breadcrumb-current text-gray-900 font-medium">My Wallet</span>
        </div>
      </div>
    </div>

    <div class="profile-layout">
      <!-- Sidebar Navigation -->
      <%- include("../partials/user/sidebar", { currentPage: 'wallet' }) %>
      
      <!-- Main Content -->
      <div class="profile-content animate-slide-in-right">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <!-- Page Header -->
          <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900 mb-2">My Wallet</h1>
            <p class="text-gray-600">Manage your wallet balance and transactions</p>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Left Column - Wallet Balance & Add Money -->
            <div class="lg:col-span-1 space-y-6">
              <!-- Balance Card -->
              <div class="wallet-gradient rounded-xl p-6 text-white shadow-lg animate-fade-in-up">
                <div class="flex items-center justify-between mb-4">
                  <h3 class="text-lg font-medium">Wallet Balance</h3>
                  <button id="toggleBalance" class="text-white hover:bg-white/20 p-2 rounded-lg transition-colors">
                    <i id="balanceIcon" class="fas fa-eye"></i>
                  </button>
                </div>
                <div class="mb-2">
                  <div id="balanceAmount" class="text-3xl font-bold">
                    ₹<%= wallet ? wallet.balance.toFixed(2) : '0.00' %>
                  </div>
                  <div id="hiddenBalance" class="text-3xl font-bold hidden">••••••</div>
                </div>
                <p class="text-blue-100 text-sm">Available Balance</p>
              </div>

              <!-- Add Money Card -->
              <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 animate-fade-in-up" style="animation-delay: 0.2s">
                <div class="flex items-center gap-2 mb-4">
                  <i class="fas fa-plus text-blue-600"></i>
                  <h3 class="text-lg font-semibold text-gray-900">Add Money</h3>
                </div>
                
                <form id="addMoneyForm" class="space-y-4">
                  <div>
                    <label for="amount" class="block text-sm font-medium text-gray-700 mb-1">Amount</label>
                    <input
                      type="number"
                      id="amount"
                      name="amount"
                      placeholder="Enter amount"
                      min="1"
                      max="1000"
                      step="0.01"
                      class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                      required
                    >
                  </div>

                  <!-- Quick Amount Buttons -->
                  <div class="grid grid-cols-4 gap-2">
                    <button type="button" onclick="setQuickAmount(10)" class="quick-amount-btn px-2 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50 transition-colors">₹10</button>
                    <button type="button" onclick="setQuickAmount(25)" class="quick-amount-btn px-2 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50 transition-colors">₹25</button>
                    <button type="button" onclick="setQuickAmount(50)" class="quick-amount-btn px-2 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50 transition-colors">₹50</button>
                    <button type="button" onclick="setQuickAmount(100)" class="quick-amount-btn px-2 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50 transition-colors">₹100</button>
                  </div>

                  <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Payment Method</label>
                    <div class="space-y-2">
                      <div class="flex items-center space-x-3">
                        <input type="radio" id="method-card" name="paymentMethod" value="card" checked class="text-blue-600">
                        <label for="method-card" class="flex items-center space-x-2 cursor-pointer">
                          <i class="fas fa-credit-card text-gray-400"></i>
                          <span class="text-sm">Credit/Debit Card</span>
                          <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">Default</span>
                        </label>
                      </div>
                      <div class="flex items-center space-x-3">
                        <input type="radio" id="method-paypal" name="paymentMethod" value="paypal" class="text-blue-600">
                        <label for="method-paypal" class="flex items-center space-x-2 cursor-pointer">
                          <i class="fab fa-paypal text-gray-400"></i>
                          <span class="text-sm">PayPal</span>
                        </label>
                      </div>
                      <div class="flex items-center space-x-3">
                        <input type="radio" id="method-bank" name="paymentMethod" value="bank" class="text-blue-600">
                        <label for="method-bank" class="flex items-center space-x-2 cursor-pointer">
                          <i class="fas fa-university text-gray-400"></i>
                          <span class="text-sm">Bank Transfer</span>
                        </label>
                      </div>
                    </div>
                  </div>
                  
                  <button
                    type="submit"
                    id="addMoneyBtn"
                    class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors flex items-center justify-center gap-2"
                  >
                    <i class="fas fa-money-bill-wave"></i>
                    <span>Add Money</span>
                  </button>
                </form>
              </div>

              <!-- Quick Actions -->
              <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 animate-fade-in-up" style="animation-delay: 0.4s">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
                <div class="space-y-3">
                  <button onclick="managePaymentMethods()" class="w-full flex items-center justify-start space-x-2 px-4 py-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                    <i class="fas fa-credit-card text-gray-400"></i>
                    <span class="text-sm">Manage Payment Methods</span>
                  </button>
                  <button onclick="downloadStatement()" class="w-full flex items-center justify-start space-x-2 px-4 py-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                    <i class="fas fa-download text-gray-400"></i>
                    <span class="text-sm">Download Statement</span>
                  </button>
                  <button onclick="transferMoney()" class="w-full flex items-center justify-start space-x-2 px-4 py-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                    <i class="fas fa-exchange-alt text-gray-400"></i>
                    <span class="text-sm">Transfer Money</span>
                  </button>
                </div>
              </div>
            </div>

            <!-- Right Column - Transaction History -->
            <div class="lg:col-span-2">
              <div class="bg-white rounded-xl shadow-sm border border-gray-200 animate-fade-in-up" style="animation-delay: 0.6s">
                <div class="p-6 border-b border-gray-200">
                  <div class="flex items-center justify-between">
                    <div class="flex items-center gap-2">
                      <i class="fas fa-history text-gray-600"></i>
                      <h3 class="text-lg font-semibold text-gray-900">Transaction History</h3>
                    </div>
                    <div class="flex items-center gap-2">
                      <select id="transactionFilter" onchange="filterTransactions()" class="px-3 py-1 text-sm border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                        <option value="all">All Transactions</option>
                        <option value="Credit">Credits</option>
                        <option value="Debit">Debits</option>
                      </select>
                    </div>
                  </div>
                </div>
                
                <div class="p-6">
                  <div id="transactionsList" class="space-y-4">
                    <% if (wallet && wallet.transaction && wallet.transaction.length > 0) { %>
                      <% wallet.transaction.sort((a, b) => new Date(b.date) - new Date(a.date)).forEach((transaction, index) => { %>
                        <div class="transaction-item flex items-center justify-between p-4 rounded-lg transition-colors animate-fade-in-up" 
                             style="animation-delay: <%= (index * 0.1) + 0.8 %>s"
                             data-type="<%= transaction.direction %>">
                          <div class="flex items-center space-x-4">
                            <div class="p-2 rounded-full <%= transaction.direction === 'Credit' ? 'bg-green-100 text-green-600' : 'bg-red-100 text-red-600' %>">
                              <i class="fas fa-<%= transaction.direction === 'Credit' ? 'arrow-down' : 'arrow-up' %>"></i>
                            </div>
                            <div>
                              <p class="font-medium text-gray-900">
                                <%= transaction.description || (transaction.direction === 'Credit' ? 'Money Added' : 'Payment Made') %>
                              </p>
                              <p class="text-sm text-gray-500">
                                <%= new Date(transaction.date).toLocaleDateString('en-US', {
                                  year: 'numeric',
                                  month: 'short',
                                  day: 'numeric',
                                  hour: '2-digit',
                                  minute: '2-digit'
                                }) %>
                                <% if (transaction.orderId) { %>
                                  • Order #<%= transaction.orderId %>
                                <% } %>
                              </p>
                            </div>
                          </div>
                          <div class="text-right">
                            <p class="font-semibold <%= transaction.direction === 'Credit' ? 'text-green-600' : 'text-red-600' %>">
                              <%= transaction.direction === 'Credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                            </p>
                            <span class="status-completed text-xs px-2 py-1 rounded-full flex items-center gap-1">
                              <i class="fas fa-check"></i>
                              Completed
                            </span>
                          </div>
                        </div>
                        <% if (index < wallet.transaction.length - 1) { %>
                          <hr class="border-gray-200">
                        <% } %>
                      <% }) %>
                    <% } else { %>
                      <div class="text-center py-12">
                        <i class="fas fa-wallet text-gray-400 text-5xl mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">No Transactions Yet</h3>
                        <p class="text-gray-500 mb-6">Your transaction history will appear here once you start using your wallet.</p>
                        <button onclick="document.getElementById('amount').focus()" class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                          <i class="fas fa-plus mr-2"></i>
                          Add Your First Transaction
                        </button>
                      </div>
                    <% } %>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Success Toast -->
  <div class="toast fixed bottom-4 right-4 bg-green-500 text-white p-4 rounded-lg shadow-lg z-50 transform translate-y-full opacity-0 transition-all duration-300" id="successToast">
    <div class="flex items-center gap-2">
      <i class="fas fa-check-circle"></i>
      <span class="toast-message">Changes saved successfully!</span>
    </div>
  </div>

  <!-- Loading Overlay -->
  <div id="loadingOverlay" class="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl">
      <div class="flex items-center space-x-3">
        <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600"></div>
        <span class="text-gray-700">Processing transaction...</span>
      </div>
    </div>
  </div>

  <!-- Footer Include -->
  <%- include("../partials/user/footer") %>

  <!-- Scripts -->
  <script>
    // Global variables
    let currentBalance = <%= wallet ? wallet.balance : 0 %>;
    let showBalance = true;
    let transactions = <%- JSON.stringify(wallet && wallet.transaction ? wallet.transaction : []) %>;

    // DOM Elements
    const toggleBalanceBtn = document.getElementById('toggleBalance');
    const balanceIcon = document.getElementById('balanceIcon');
    const balanceAmount = document.getElementById('balanceAmount');
    const hiddenBalance = document.getElementById('hiddenBalance');
    const addMoneyForm = document.getElementById('addMoneyForm');
    const addMoneyBtn = document.getElementById('addMoneyBtn');
    const loadingOverlay = document.getElementById('loadingOverlay');
    const transactionsList = document.getElementById('transactionsList');

    // Initialize page
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize animations
      const animatedElements = document.querySelectorAll('[class*="animate-"]');
      animatedElements.forEach(el => {
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('animate-visible');
            }
          });
        }, { threshold: 0.1 });
        observer.observe(el);
      });
    });

    // Toggle balance visibility
    toggleBalanceBtn.addEventListener('click', function() {
      showBalance = !showBalance;
      
      if (showBalance) {
        balanceAmount.classList.remove('hidden');
        hiddenBalance.classList.add('hidden');
        balanceIcon.className = 'fas fa-eye';
      } else {
        balanceAmount.classList.add('hidden');
        hiddenBalance.classList.remove('hidden');
        balanceIcon.className = 'fas fa-eye-slash';
      }
    });

    // Set quick amount
    function setQuickAmount(amount) {
      document.getElementById('amount').value = amount;
      
      // Update active state
      document.querySelectorAll('.quick-amount-btn').forEach(btn => {
        btn.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
        btn.classList.add('border-gray-300', 'hover:bg-gray-50');
      });
      
      event.target.classList.remove('border-gray-300', 'hover:bg-gray-50');
      event.target.classList.add('bg-blue-600', 'text-white', 'border-blue-600');
    }

    // Filter transactions
    function filterTransactions() {
      const filter = document.getElementById('transactionFilter').value;
      const transactionItems = document.querySelectorAll('.transaction-item');
      
      transactionItems.forEach(item => {
        const type = item.getAttribute('data-type');
        if (filter === 'all' || type === filter) {
          item.style.display = 'flex';
        } else {
          item.style.display = 'none';
        }
      });
    }

    // Add money form submission
    addMoneyForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const amount = parseFloat(formData.get('amount'));
      const paymentMethod = formData.get('paymentMethod');
      
      if (!amount || amount <= 0) {
        showToast('Please enter a valid amount', 'error');
        return;
      }

      if (amount > 1000) {
        showToast('Maximum amount is ₹1000', 'error');
        return;
      }

      // Show loading
      showLoading(true);
      addMoneyBtn.disabled = true;
      addMoneyBtn.innerHTML = `
        <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
        Processing...
      `;

      try {
        const response = await fetch('/wallet/add-money', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            amount: amount,
            paymentMethod: paymentMethod,
            description:` Money added via ${paymentMethod}`
          })
        });

        const data = await response.json();

        if (data.success) {
          // Update balance
          currentBalance = data.newBalance;
          balanceAmount.textContent =`₹${currentBalance.toFixed(2)}`;
          
          // Reset form
          this.reset();
          
          // Reset quick amount buttons
          document.querySelectorAll('.quick-amount-btn').forEach(btn => {
            btn.classList.remove('bg-blue-600', 'text-white', 'border-blue-600');
            btn.classList.add('border-gray-300', 'hover:bg-gray-50');
          });
          
          showToast(`$${amount.toFixed(2)} added to your wallet successfully!`);
          
          // Reload page to show new transaction
          setTimeout(() => {
            window.location.reload();
          }, 2000);
        } else {
          showToast(data.message || 'Failed to add money', 'error');
        }
      } catch (error) {
        console.error('Error adding money:', error);
        showToast('Failed to add money. Please try again.', 'error');
      } finally {
        showLoading(false);
        addMoneyBtn.disabled = false;
        addMoneyBtn.innerHTML = `
          <i class="fas fa-money-bill-wave"></i>
          <span>Add Money</span>
        `;
      }
    });

    // Show loading overlay
    function showLoading(show) {
      if (show) {
        loadingOverlay.classList.remove('hidden');
      } else {
        loadingOverlay.classList.add('hidden');
      }
    }

    // Toast notification function
    function showToast(message, type = 'success') {
      const toast = document.getElementById('successToast');
      const messageElement = toast.querySelector('.toast-message');
      const iconElement = toast.querySelector('i');
      
      messageElement.textContent = message;
      
      if (type === 'error') {
        iconElement.className = 'fas fa-exclamation-circle';
        toast.classList.remove('bg-green-500');
        toast.classList.add('bg-red-500');
      } else {
        iconElement.className = 'fas fa-check-circle';
        toast.classList.remove('bg-red-500');
        toast.classList.add('bg-green-500');
      }
      
      // Show toast
      toast.classList.remove('translate-y-full', 'opacity-0');
      toast.classList.add('translate-y-0', 'opacity-100');
      
      // Hide after 3 seconds
      setTimeout(() => {
        toast.classList.add('translate-y-full', 'opacity-0');
        toast.classList.remove('translate-y-0', 'opacity-100');
      }, 3000);
    }

    // Quick action functions
    function managePaymentMethods() {
      showToast('Manage Payment Methods feature coming soon!');
    }

    function downloadStatement() {
      showToast('Download Statement feature coming soon!');
    }

    function transferMoney() {
      showToast('Transfer Money feature coming soon!');
    }
  </script>
</body>
</html>